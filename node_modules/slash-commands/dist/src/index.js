"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DiscordInteractions = void 0;
const centra = require("centra");
const utils_1 = require("./utils");
const DISCORD_ENDPOINT = "https://discord.com/api/v8/";
const makeEndpoint = (endpoint) => `${DISCORD_ENDPOINT}${endpoint}`;
__exportStar(require("./structures"), exports);
__exportStar(require("./builders"), exports);
class DiscordInteractions {
    constructor(opts) {
        this.verifySignature = (signature, timestamp, rawBody) => {
            return utils_1.verifySignature(this.publicKey, signature, timestamp, rawBody);
        };
        this.getApplicationCommands = (guildId) => __awaiter(this, void 0, void 0, function* () {
            const request = yield centra(makeEndpoint(guildId
                ? `applications/${this.applicationid}/guilds/${guildId}/commands`
                : `applications/${this.applicationid}/commands`))
                .header("Authorization", `${this.tokenPrefix}${this.authToken}`)
                .send();
            return (yield request.json());
        });
        this.createApplicationCommand = (command, guildId, commandId) => __awaiter(this, void 0, void 0, function* () {
            const suffix = commandId ? `/${commandId}` : "";
            const method = commandId ? "PATCH" : "POST";
            const request = yield centra(makeEndpoint(guildId
                ? `applications/${this.applicationid}/guilds/${guildId}/commands${suffix}`
                : `applications/${this.applicationid}/commands${suffix}`), method)
                .body(command, "json")
                .header("Authorization", `${this.tokenPrefix}${this.authToken}`)
                .send();
            return (yield request.json());
        });
        this.editApplicationCommand = (commandId, command, guildId) => __awaiter(this, void 0, void 0, function* () {
            return yield this.createApplicationCommand(command, guildId, commandId);
        });
        this.deleteApplicationCommand = (commandId, guildId) => __awaiter(this, void 0, void 0, function* () {
            const request = yield centra(makeEndpoint(guildId
                ? `applications/${this.applicationid}/guilds/${guildId}/commands/${commandId}`
                : `applications/${this.applicationid}/commands/${commandId}`), "DELETE")
                .header("Authorization", `${this.tokenPrefix}${this.authToken}`)
                .send();
            return request.statusCode == 204;
        });
        this.publicKey = opts.publicKey;
        this.applicationid = opts.applicationId;
        this.authToken = opts.authToken;
        this.tokenPrefix = (opts.tokenPrefix || "Bot") + " ";
    }
}
exports.DiscordInteractions = DiscordInteractions;
exports.default = DiscordInteractions;
