import { ApplicationCommand, PartialApplicationCommand, Snowflake } from "./structures";
export * from "./structures";
export * from "./builders";
export declare class DiscordInteractions {
    private publicKey;
    private applicationid;
    private authToken;
    private tokenPrefix;
    constructor(opts: {
        applicationId: Snowflake;
        publicKey: Snowflake;
        authToken: string;
        tokenPrefix?: string;
    });
    verifySignature: (signature: string, timestamp: string, rawBody: string) => Promise<boolean>;
    getApplicationCommands: (guildId?: string) => Promise<ApplicationCommand[]>;
    createApplicationCommand: (command: PartialApplicationCommand, guildId?: string, commandId?: string) => Promise<ApplicationCommand>;
    editApplicationCommand: (commandId: string, command: PartialApplicationCommand, guildId?: string) => Promise<ApplicationCommand>;
    deleteApplicationCommand: (commandId: string, guildId?: string) => Promise<boolean>;
}
export default DiscordInteractions;
